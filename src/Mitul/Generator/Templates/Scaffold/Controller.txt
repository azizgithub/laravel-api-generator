<?php namespace $NAMESPACE$;

use App\Http\Requests;
use App\Http\Controllers\BaseController;
use $MODEL_NAMESPACE$;
use Illuminate\Http\Request;
use Config;
use Response;

class $MODEL_NAME$Controller extends BaseController
{

	/**
	 * $MODEL_NAME$ Repository
	 *
	 * @var $MODEL_NAME$
	 */
	protected $$MODEL_NAME_CAMEL$;

	public function __construct($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
	{
		$this->$MODEL_NAME_CAMEL$ = $$MODEL_NAME_CAMEL$;
		Config::set('conf.menu', 'Menu');
		Config::set('conf.submenu', 'sm_$MODEL_NAME_CAMEL$');
		Config::set('conf.breadcrumbs', array('Menu', '$MODEL_NAME$'));	
	}


	/**
	 * Display a listing of the $MODEL_NAME$.
	 *
	 * @return Response
	 */
	public function index()
	{
		$$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$->all();

		return view('$MODEL_NAME_PLURAL_CAMEL$.index', compact('$MODEL_NAME_PLURAL_CAMEL$'));
	}

	/**
	 * Show the form for creating a new $MODEL_NAME$.
	 *
	 * @return Response
	 */
	public function create()
	{
		return view('$MODEL_NAME_PLURAL_CAMEL$.create');
	}

	/**
	 * Store a newly created $MODEL_NAME$ in storage.
	 *
	 * @param Create$MODEL_NAME$Request $request
	 *
	 * @return Response
	 */
	public function store(Request $request)
	{
        $input = $request->all();

		$this->$MODEL_NAME_CAMEL$->fill($input);

		if($this->$MODEL_NAME_CAMEL$->save()) {
			return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.index')
				->with('success', 'Penambahan $MODEL_NAME$ Berhasil');
		}

		return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.create')
			->withInput()
			->withErrors($this->$MODEL_NAME_CAMEL$->errors())
			->with('danger', 'Validasi Form Gagal');		
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$->findOrFail($id);

		return view('$MODEL_NAME_PLURAL_CAMEL$.show', compact('$MODEL_NAME_CAMEL$'));
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$->find($id);

		if (is_null($$MODEL_NAME_CAMEL$))
		{
			return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.index');
		}

		return view('$MODEL_NAME_PLURAL_CAMEL$.edit', compact('$MODEL_NAME_CAMEL$'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id, Request $request)
	{
		$input = array_except($request->all(), '_method');
		$this->$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$->find($id)->fill($input);		

		if($this->$MODEL_NAME_CAMEL$->save()) {
			return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.index')
				->with('success', 'Update $MODEL_NAME$ Berhasil');
		}

		return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.edit', $id)
			->withInput()
			->withErrors($this->$MODEL_NAME_CAMEL$->errors())
			->with('danger', 'Validasi Form Gagal');
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		if(!$this->$MODEL_NAME_CAMEL$->find($id)->delete()) {
			return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.index')
			->with('danger', 'Data $MODEL_NAME$ Tidak Bisa Dihapus, Karena Sudah Digunakan Oleh Sistem');
		}

		return redirect()->route('$MODEL_NAME_PLURAL_CAMEL$.index')
			->with('success', '$MODEL_NAME$ Berhasil Dihapus');		
	}


}
